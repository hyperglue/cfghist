#!/bin/bash

# export variables
export EDITOR="${EDITOR:-nvim}"

export CONFIGDIRPREFIX="${CONFIGDIRPREFIX:-/config}"
export CONFIGDIR="${CONFIGDIRPREFIX}/$(hostname -s)"
export CONFIGFILE="${CONFIGDIR}"/configfile
export FILESDIR="${CONFIGDIR}"/files

export CONFIGIGNORE="^$|^=|^cd|^edit|^show|^history|^ls|^cat|^zfs get|^zfs list|^exit|^quit|^pkill|^ps|^xbps-query"

export HISTFILE="${CONFIGDIR}"/history
export HISTFILESIZE=999999
export HISTSIZE=999999

export PS1="\[\e[1;34m\]config mode\[\e[0m\] | \[\e[1;31m\]type 'quit' to save!\[\e[0m\]\n\w # "

function to_snake_case() {
    echo "${1}" | tr '[:upper:]' '[:lower:]' | sed -E 's|\ |\_|g; s|(\S)_\$|\1|g'
}

# check if we are running as root
if test "$(id -u)" -ne 0
then
    echo "You must be root to use this script!"
    exit 1
fi

# ask if we want to save changes, if so then copy current config to permanent config file, then ask if we want create snapshot
# if not then ask if we want rollback 
ask_if_save() {
    read -rp "Are you sure you want to save the changes? ([Y]es/[N]o) " answer_save;
    case "${answer_save}" in
	[yY]|[yY][eE][sS])
	    "${EDITOR}" "${CONFIGFILE}.current" # edit file in case we want to delete/modify some commands
	    cat "${CONFIGFILE}.current" >> "${CONFIGFILE}"
	    rm "${CONFIGFILE}.current"
	    ask_if_snapshot
	    ;;
	[nN]|[nN][oO])
	    rm "${CONFIGFILE}.current"
	    ask_if_rollback
	    ;;
	*)
	    echo "Please answer [Y]es or [N]o."
	    ask_if_save
	    ;;
    esac
}

# ask if we want to rollback
ask_if_rollback() {
    read -rp "Do you want to rollback to last snapshot and commit? ([Y]es/[N]o) " answer_rollback;
    case "${answer_rollback}" in
	[yY]|[yY][eE][sS])
	    last_snapshot="$(zfs list -o name -t snapshot "$(zfs-get-dataset-by-mountpoint /)" | tail -1)"
	    set -x
	    zfs rollback "${last_snapshot}"
	    zfs mount -o remount,rw "$(zfs-get-dataset-by-mountpoint /)"
	    exit 0
	    ;;
	[nN]|[nN][oO])
	    exit 0;
	    ;;
	*)
	    echo "Please answer [Y]es or [N]o."
	    ask_if_rollback
	    ;;
    esac
}

# ask if we want to create snapshot, if so then add zfs-snapshot command to config file
ask_if_snapshot() {
    read -rp "Do you want to create a snapshot? ([Y]es/[N]o) " answer_snapshot;
    case "${answer_snapshot}" in
	[yY]|[yY][eE][sS])
	    read -rp "Name for the snapshot/commit? " answer_name;
	    answer_name_snake_case="$(to_snake_case "${answer_name}")"
	    echo "zfs-snapshot / ${answer_name_snake_case}" >> "${CONFIGFILE}"
		# shellcheck disable=SC2164
	    cd "${CONFIGDIR}"
	    zfs-snapshot / "${answer_name_snake_case}"
	    exit 0
	    ;;
	[nN]|[nN][oO])
	    exit 0
	    ;;
	*)
	    echo "Please answer [Y]es or [N]o."
	    ask_if_snapshot
	    ;;
    esac

}


# when we want to edit file, we make changes then we copy the file to CONFIGDIR repository
function edit() {
    touch "${1}"
    filename="$(readlink -f "${1}")"
    dirname="$(dirname "${filename}")"
    "${EDITOR}" "${filename}"
    mkdir -p "${FILESDIR}/${dirname}"
    cp -f "${filename}" "${FILESDIR}/${filename}"
    echo "edit ${filename}" >> "${CONFIGFILE}.current"

}

function quit() {
    save_previous_command # save the last command
    exit 0
}

function save_previous_command() {
    last_command="$(history | tail -1 | cut -c8-)"

    # if last command is in $CONFIGIGNORE, then don't append it to current config file
    if echo "${last_command}" | grep -qvE "${CONFIGIGNORE}"
    then
	echo "${last_command}" >> "${CONFIGFILE}.current"
    fi
    
}

function show() {
    case "${1}" in
	"config")
	    cat "${CONFIGFILE}"
	    ;;
	"current")
	    cat "${CONFIGFILE}.current"
	    ;;
	*)
	    echo "Usage: show (config|current)"
	    ;;
    esac
}

export -f edit
export -f quit
export -f save_previous_command
export -f show

PROMPT_COMMAND="save_previous_command" bash --norc --noprofile; ask_if_save
